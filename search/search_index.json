{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Investigating the Range as a Function of the Angle of Projection 1. Theoretical Foundation Projectile motion follows Newton\u2019s laws of motion. The fundamental equations describing the motion of a projectile launched with initial speed \\(v_0\\) at an angle \\(\\theta\\) (neglecting air resistance) are derived from kinematic equations. Equations of Motion The horizontal and vertical components of velocity are: \\[ v_{0x} = v_0 \\cos\\theta \\] \\[ v_{0y} = v_0 \\sin\\theta \\] The position as a function of time is given by: \\[ x(t) = v_0 \\cos\\theta \\cdot t \\] \\[ y(t) = v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 \\] where \\(g\\) is the acceleration due to gravity. Time of Flight The projectile returns to the ground when \\(y = 0\\) : \\[ 0 = v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 \\] Solving for \\(t\\) : \\[ t = \\frac{2 v_0 \\sin\\theta}{g} \\] Range of the Projectile The range \\(R\\) is the horizontal distance when \\(y = 0\\) : \\[ R = v_0 \\cos\\theta \\cdot t \\] Substituting \\(t\\) : \\[ R = \\frac{v_0^2 \\sin 2\\theta}{g} \\] This equation shows that the range is maximized when \\(\\theta = 45^\\circ\\) . 2. Analysis of the Range The range is symmetric about \\(45^\\circ\\) . Increasing \\(v_0\\) increases the range quadratically. Higher gravitational acceleration \\(g\\) reduces the range. 3. Python Simulation Below is a Python script to visualize the range as a function of angle: import numpy as np import matplotlib.pyplot as plt g = 9.81 # Acceleration due to gravity (m/s^2) v0 = 20 # Initial velocity (m/s) theta = np.linspace(0, 90, 100) # Angle from 0 to 90 degrees R = (v0**2 * np.sin(2 * np.radians(theta))) / g plt.figure(figsize=(8, 5)) plt.plot(theta, R, label=f'v0 = {v0} m/s') plt.xlabel('Angle of Projection (degrees)') plt.ylabel('Range (m)') plt.title('Projectile Range vs. Angle of Projection') plt.legend() plt.grid() plt.show() Forced Damped Pendulum: Applications and Implementation 3. Practical Applications The forced damped pendulum is widely used in real-world applications: 1. Energy Harvesting Devices Systems like electromagnetic energy harvesters utilize forced damped pendulums to convert mechanical vibrations into electrical energy. Example: Piezoelectric energy harvesting in wearable devices. 2. Suspension Bridges & Structural Engineering Bridges experience oscillations due to wind, traffic, and seismic activity, modeled using a forced damped pendulum. Example: The Tacoma Narrows Bridge collapse due to resonance effects. 3. Oscillating Circuits (RLC Circuits in Electronics) The equation governing an RLC circuit (with resistance, inductance, and capacitance) is mathematically equivalent to a forced damped pendulum. Example: Radio-frequency circuits where damping affects signal stability. 4. Implementation: Computational Model We numerically simulate the motion of a forced damped pendulum and visualize its behavior. Mathematical Model The equation of motion is: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = A \\cos(\\omega t) \\] where: $$ \\gamma $$ - is the damping coefficient, $$ \\omega_0 $$ - is the natural frequency, $$ A $$ - is the amplitude of the external driving force, $$ \\omega $$ - is the driving frequency. To observe chaos, we plot the Poincar\u00e9 section: ```python import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp Constants gamma = 0.2 # Damping coefficient omega0 = 1.5 # Natural frequency A = 1.2 # Driving force amplitude omega = 2.0 # Driving frequency Equations of motion def forced_damped_pendulum(t, y): theta, omega_theta = y dtheta_dt = omega_theta domega_dt = -gamma * omega_theta - omega0**2 * np.sin(theta) + A * np.cos(omega * t) return [dtheta_dt, domega_dt] Time range t_span = (0, 50) t_eval = np.linspace(*t_span, 1000) Initial conditions y0 = [0.2, 0] Solve the differential equation sol = solve_ivp(forced_damped_pendulum, t_span, y0, t_eval=t_eval) Phase Diagram plt.figure(figsize=(8, 5)) plt.plot(sol.y[0], sol.y[1], color='b', label='Phase Space') plt.xlabel(r' \\(\\theta\\) (rad)') plt.ylabel(r' \\(\\frac{d\\theta}{dt}\\) (rad/s)') plt.title('Phase Diagram of the Forced Damped Pendulum') plt.legend() plt.grid(True) plt.show()","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"Projectile motion follows Newton\u2019s laws of motion. The fundamental equations describing the motion of a projectile launched with initial speed \\(v_0\\) at an angle \\(\\theta\\) (neglecting air resistance) are derived from kinematic equations.","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#equations-of-motion","text":"The horizontal and vertical components of velocity are: \\[ v_{0x} = v_0 \\cos\\theta \\] \\[ v_{0y} = v_0 \\sin\\theta \\] The position as a function of time is given by: \\[ x(t) = v_0 \\cos\\theta \\cdot t \\] \\[ y(t) = v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 \\] where \\(g\\) is the acceleration due to gravity.","title":"Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#time-of-flight","text":"The projectile returns to the ground when \\(y = 0\\) : \\[ 0 = v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 \\] Solving for \\(t\\) : \\[ t = \\frac{2 v_0 \\sin\\theta}{g} \\]","title":"Time of Flight"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#range-of-the-projectile","text":"The range \\(R\\) is the horizontal distance when \\(y = 0\\) : \\[ R = v_0 \\cos\\theta \\cdot t \\] Substituting \\(t\\) : \\[ R = \\frac{v_0^2 \\sin 2\\theta}{g} \\] This equation shows that the range is maximized when \\(\\theta = 45^\\circ\\) .","title":"Range of the Projectile"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"The range is symmetric about \\(45^\\circ\\) . Increasing \\(v_0\\) increases the range quadratically. Higher gravitational acceleration \\(g\\) reduces the range.","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-python-simulation","text":"Below is a Python script to visualize the range as a function of angle: import numpy as np import matplotlib.pyplot as plt g = 9.81 # Acceleration due to gravity (m/s^2) v0 = 20 # Initial velocity (m/s) theta = np.linspace(0, 90, 100) # Angle from 0 to 90 degrees R = (v0**2 * np.sin(2 * np.radians(theta))) / g plt.figure(figsize=(8, 5)) plt.plot(theta, R, label=f'v0 = {v0} m/s') plt.xlabel('Angle of Projection (degrees)') plt.ylabel('Range (m)') plt.title('Projectile Range vs. Angle of Projection') plt.legend() plt.grid() plt.show()","title":"3. Python Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#forced-damped-pendulum-applications-and-implementation","text":"","title":"Forced Damped Pendulum: Applications and Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"The forced damped pendulum is widely used in real-world applications:","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-energy-harvesting-devices","text":"Systems like electromagnetic energy harvesters utilize forced damped pendulums to convert mechanical vibrations into electrical energy. Example: Piezoelectric energy harvesting in wearable devices.","title":"1. Energy Harvesting Devices"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-suspension-bridges-structural-engineering","text":"Bridges experience oscillations due to wind, traffic, and seismic activity, modeled using a forced damped pendulum. Example: The Tacoma Narrows Bridge collapse due to resonance effects.","title":"2. Suspension Bridges &amp; Structural Engineering"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-oscillating-circuits-rlc-circuits-in-electronics","text":"The equation governing an RLC circuit (with resistance, inductance, and capacitance) is mathematically equivalent to a forced damped pendulum. Example: Radio-frequency circuits where damping affects signal stability.","title":"3. Oscillating Circuits (RLC Circuits in Electronics)"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation-computational-model","text":"We numerically simulate the motion of a forced damped pendulum and visualize its behavior.","title":"4. Implementation: Computational Model"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#mathematical-model","text":"The equation of motion is: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = A \\cos(\\omega t) \\] where: $$ \\gamma $$ - is the damping coefficient, $$ \\omega_0 $$ - is the natural frequency, $$ A $$ - is the amplitude of the external driving force, $$ \\omega $$ - is the driving frequency.","title":"Mathematical Model"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#to-observe-chaos-we-plot-the-poincare-section","text":"```python import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp","title":"To observe chaos, we plot the Poincar\u00e9 section:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#constants","text":"gamma = 0.2 # Damping coefficient omega0 = 1.5 # Natural frequency A = 1.2 # Driving force amplitude omega = 2.0 # Driving frequency","title":"Constants"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#equations-of-motion_1","text":"def forced_damped_pendulum(t, y): theta, omega_theta = y dtheta_dt = omega_theta domega_dt = -gamma * omega_theta - omega0**2 * np.sin(theta) + A * np.cos(omega * t) return [dtheta_dt, domega_dt]","title":"Equations of motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#time-range","text":"t_span = (0, 50) t_eval = np.linspace(*t_span, 1000)","title":"Time range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#initial-conditions","text":"y0 = [0.2, 0]","title":"Initial conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#solve-the-differential-equation","text":"sol = solve_ivp(forced_damped_pendulum, t_span, y0, t_eval=t_eval)","title":"Solve the differential equation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#phase-diagram","text":"plt.figure(figsize=(8, 5)) plt.plot(sol.y[0], sol.y[1], color='b', label='Phase Space') plt.xlabel(r' \\(\\theta\\) (rad)') plt.ylabel(r' \\(\\frac{d\\theta}{dt}\\) (rad/s)') plt.title('Phase Diagram of the Forced Damped Pendulum') plt.legend() plt.grid(True) plt.show()","title":"Phase Diagram"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Projectile Motion: Theory, Formulas, and Examples 1. Introduction Projectile motion refers to the motion of an object under the influence of gravity, assuming no air resistance. It consists of two independent components: - Horizontal Motion : Constant velocity motion. - Vertical Motion : Uniformly accelerated motion due to gravity. 2. Useful Definitions Initial velocity ( \\(v_0\\) ): The speed at which the object is launched. Angle of projection ( \\(\\theta\\) ): The angle at which the object is launched with respect to the horizontal. Acceleration due to gravity ( \\(g\\) ): The constant acceleration experienced due to Earth's gravity. Typically, \\(g = 9.81 \\, m/s^2\\) . Time of flight ( \\(t_f\\) ): The total time the projectile remains in the air. Maximum height ( \\(H\\) ): The highest vertical position the projectile reaches. Range ( \\(R\\) ): The horizontal distance covered by the projectile. 3. Governing Equations of Motion (a) Horizontal Motion Since there is no acceleration in the horizontal direction: $$ x = v_0 \\cos\\theta \\cdot t $$ (b) Vertical Motion Using kinematic equations for motion under gravity: $$ y = v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 $$ 4. Key Formulas (a) Time of Flight The projectile reaches the ground when \\(y = 0\\) . Solving for \\(t\\) : $$ t_f = \\frac{2 v_0 \\sin\\theta}{g} $$ (b) Maximum Height The maximum height occurs when vertical velocity becomes zero: $$ H = \\frac{v_0^2 \\sin^2\\theta}{2g} $$ (c) Range of the Projectile The horizontal distance traveled before returning to the ground: $$ R = \\frac{v_0^2 \\sin 2\\theta}{g} $$ (d) Velocity Components at Any Time Horizontal velocity: $ v_x = v_0 \\cos\\theta $ Vertical velocity: $ v_y = v_0 \\sin\\theta - g t $ 5. Examples Example 1: Finding Time of Flight and Range A projectile is launched with an initial velocity of \\(v_0 = 20\\) m/s at an angle of \\(45^\\circ\\) . Find: 1. The time of flight. 2. The range of the projectile. Solution: Given: - \\(v_0 = 20\\) m/s - \\(\\theta = 45^\\circ\\) - \\(g = 9.81\\) m/s\u00b2 Step 1: Compute Time of Flight $$ t_f = \\frac{2 v_0 \\sin\\theta}{g} = \\frac{2 \\times 20 \\times \\sin 45^\\circ}{9.81} $$ $$ t_f \\approx 2.87 \\text{ s} $$ Step 2: Compute Range $$ R = \\frac{v_0^2 \\sin 2\\theta}{g} = \\frac{20^2 \\sin 90^\\circ}{9.81} $$ $$ R \\approx 40.8 \\text{ m} $$ Example 2: Maximum Height A ball is thrown with an initial velocity of \\(15\\) m/s at an angle of \\(30^\\circ\\) . Find the maximum height. Solution: $$ H = \\frac{v_0^2 \\sin^2\\theta}{2g} $$ $$ H = \\frac{15^2 \\sin^2 30^\\circ}{2 \\times 9.81} $$ $$ H \\approx 2.86 \\text{ m} $$ 6. Python Simulation You can simulate projectile motion using Python: ```python import numpy as np import matplotlib.pyplot as plt def projectile_trajectory(v0, theta, g=9.81): theta_rad = np.radians(theta) t_flight = 2 * v0 * np.sin(theta_rad) / g t = np.linspace(0, t_flight, num=100) x = v0 * np.cos(theta_rad) * t y = v0 * np.sin(theta_rad) * t - 0.5 * g * t**2 return x, y Example: Projectile with v0 = 20 m/s and \u03b8 = 45\u00b0 x_vals, y_vals = projectile_trajectory(20, 45) plt.plot(x_vals, y_vals) plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(\"Projectile Motion\") plt.show()","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#projectile-motion-theory-formulas-and-examples","text":"","title":"Projectile Motion: Theory, Formulas, and Examples"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-introduction","text":"Projectile motion refers to the motion of an object under the influence of gravity, assuming no air resistance. It consists of two independent components: - Horizontal Motion : Constant velocity motion. - Vertical Motion : Uniformly accelerated motion due to gravity.","title":"1. Introduction"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-useful-definitions","text":"Initial velocity ( \\(v_0\\) ): The speed at which the object is launched. Angle of projection ( \\(\\theta\\) ): The angle at which the object is launched with respect to the horizontal. Acceleration due to gravity ( \\(g\\) ): The constant acceleration experienced due to Earth's gravity. Typically, \\(g = 9.81 \\, m/s^2\\) . Time of flight ( \\(t_f\\) ): The total time the projectile remains in the air. Maximum height ( \\(H\\) ): The highest vertical position the projectile reaches. Range ( \\(R\\) ): The horizontal distance covered by the projectile.","title":"2. Useful Definitions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-governing-equations-of-motion","text":"","title":"3. Governing Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#a-horizontal-motion","text":"Since there is no acceleration in the horizontal direction: $$ x = v_0 \\cos\\theta \\cdot t $$","title":"(a) Horizontal Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#b-vertical-motion","text":"Using kinematic equations for motion under gravity: $$ y = v_0 \\sin\\theta \\cdot t - \\frac{1}{2} g t^2 $$","title":"(b) Vertical Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-key-formulas","text":"","title":"4. Key Formulas"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#a-time-of-flight","text":"The projectile reaches the ground when \\(y = 0\\) . Solving for \\(t\\) : $$ t_f = \\frac{2 v_0 \\sin\\theta}{g} $$","title":"(a) Time of Flight"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#b-maximum-height","text":"The maximum height occurs when vertical velocity becomes zero: $$ H = \\frac{v_0^2 \\sin^2\\theta}{2g} $$","title":"(b) Maximum Height"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#c-range-of-the-projectile","text":"The horizontal distance traveled before returning to the ground: $$ R = \\frac{v_0^2 \\sin 2\\theta}{g} $$","title":"(c) Range of the Projectile"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#d-velocity-components-at-any-time","text":"Horizontal velocity: $ v_x = v_0 \\cos\\theta $ Vertical velocity: $ v_y = v_0 \\sin\\theta - g t $","title":"(d) Velocity Components at Any Time"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#5-examples","text":"","title":"5. Examples"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#example-1-finding-time-of-flight-and-range","text":"A projectile is launched with an initial velocity of \\(v_0 = 20\\) m/s at an angle of \\(45^\\circ\\) . Find: 1. The time of flight. 2. The range of the projectile.","title":"Example 1: Finding Time of Flight and Range"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#solution","text":"Given: - \\(v_0 = 20\\) m/s - \\(\\theta = 45^\\circ\\) - \\(g = 9.81\\) m/s\u00b2 Step 1: Compute Time of Flight $$ t_f = \\frac{2 v_0 \\sin\\theta}{g} = \\frac{2 \\times 20 \\times \\sin 45^\\circ}{9.81} $$ $$ t_f \\approx 2.87 \\text{ s} $$ Step 2: Compute Range $$ R = \\frac{v_0^2 \\sin 2\\theta}{g} = \\frac{20^2 \\sin 90^\\circ}{9.81} $$ $$ R \\approx 40.8 \\text{ m} $$","title":"Solution:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#example-2-maximum-height","text":"A ball is thrown with an initial velocity of \\(15\\) m/s at an angle of \\(30^\\circ\\) . Find the maximum height. Solution: $$ H = \\frac{v_0^2 \\sin^2\\theta}{2g} $$ $$ H = \\frac{15^2 \\sin^2 30^\\circ}{2 \\times 9.81} $$ $$ H \\approx 2.86 \\text{ m} $$","title":"Example 2: Maximum Height"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#6-python-simulation","text":"You can simulate projectile motion using Python: ```python import numpy as np import matplotlib.pyplot as plt def projectile_trajectory(v0, theta, g=9.81): theta_rad = np.radians(theta) t_flight = 2 * v0 * np.sin(theta_rad) / g t = np.linspace(0, t_flight, num=100) x = v0 * np.cos(theta_rad) * t y = v0 * np.sin(theta_rad) * t - 0.5 * g * t**2 return x, y","title":"6. Python Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#example-projectile-with-v0-20-ms-and-45","text":"x_vals, y_vals = projectile_trajectory(20, 45) plt.plot(x_vals, y_vals) plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(\"Projectile Motion\") plt.show()","title":"Example: Projectile with v0 = 20 m/s and \u03b8 = 45\u00b0"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}